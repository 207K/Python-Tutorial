.. role:: emoji-size

.. meta::
   :description: کتاب آموزش زبان برنامه نویسی پایتون به فارسی، مدیریت خطا در پایتون، datetime در پایتون، time در پایتون، calendar پایتون
   :keywords:  آموزش, آموزش پایتون, آموزش برنامه نویسی, پایتون, کتابخانه, پایتون, datetime در پایتون


درس ۲۵: زمان در پایتون: ماژول‌ datetime 
===========================================

.. figure:: /_static/pages/25-python-date-time-calendar.jpg
    :align: center
    :alt: زمان در پایتون: ماژول‌ datetime

    Photo by `Ales Krivec <https://unsplash.com/photos/ZMZHcvIVgbg>`__

  
  


توجه داشته باشید، هم اکنون پشتیبانی نسخه 2x پایتون به پایان رسیده است. بنابراین	به منظور جلوگیری از پیچیدگی‌های غیر ضروری، تمام مطالب این درس بر مبنای پایتون 3x ارائه می‌شود.



:emoji-size:`✔` سطح: متوسط

----


.. contents:: سرفصل‌ها
    :depth: 2

----



ماژول datetime
~~~~~~~~~~~~~~~~~~~~~~~~~~~

این ماژول [`اسناد پایتون <https://docs.python.org/3/library/datetime.html>`__] از کتابخانه استاندارد زبان برنامه‌نویسی پایتون چند نوع یا کلاس برای کار با زمان (ساعت و تاریخ) را در اختیار برنامه‌نویس قرا می‌دهد:

* **کلاس** ``date``: مناسب برای ایجاد شی تاریخ در پایتون می‌باشد که اشیا آن هیچ آگاهی نسبت به ساعت و منطقه زمانی (Time zone) [`ویکی‌پدیا <https://en.wikipedia.org/wiki/Time_zone>`__] نخواهند داشت و تنها مربوط به روزی خاص بر اساس گاه‌شماری میلادی (Gregorian calendar) [`ویکی‌پدیا <https://en.wikipedia.org/wiki/Gregorian_calendar>`__] می‌باشند.

* **کلاس** ``time``: مناسب برای ایجاد شی ساعت در پایتون می‌باشد و اشیا این کلاس هیچ آگاهی نسبت به تاریخ یا روز خاصی ندارند.

* **کلاس** ``datetime``: ترکیبی از دو کلاس ``date`` و ``time`` که اشیای آن نسبت به یک زمان (تاریخ و ساعت) مشخص آگاهی دارند.

در ادامه به بررسی این سه کلاس و دیگر اجزای مهم از ماژول datetime خواهیم پرداخت.

.. note::

  در زبان برنامه‌نویسی پایتون اشیای مرتبط با زمان براساس توانایی آگاهی آن‌ها از منطقه زمانی (Time zone) به دو دسته **«آگاه» (aware)** و **«ساده» (naive)** تقسیم‌بندی می‌شوند. بر همین اساس اشیای کلاس ``date`` از نوع naive و اشیای دو کلاس ``time`` و ``datetime`` می‌توانند برحسب شرایط  aware یا naive باشند.


کلاس ``datetime.date``
~~~~~~~~~~~~~~~~~~~~~~~~~~~

این کلاس نمایش ایجاد یک شی تاریخ بر اساس گاه‌شماری میلادی (Gregorian calendar) در زبان برنامه‌نویسی پایتون می‌باشد. در ادامه این بخش به بررسی چگونگی ایجاد شی و اجزای آن خواهیم پرداخت.

ایجاد شی تاریخ
------------------

**۱- با استفاده از نمونه‌سازی**::

    >>> import datetime

    >>> date = datetime.date(2021, 4, 7)


یا ::


    >>> import datetime

    >>> date = datetime.date(year=2021, month=4, day=7)

که::

    >>> date
    datetime.date(2021, 4, 7)

    >>> type(date)
    <class 'datetime.date'>

::

    >>> date.year
    2021
    >>> date.month
    4
    >>> date.day
    7

برای نمونه‌سازی از کلاس ``datetime.date`` می‌بایست سه Instance attribute آن را مقداردهی نماییم. این سه attribute عبارتند از:

* ``year``: از نوع ``int`` می‌باشد و مقداری برابر با سال مورد نظر خواهد داشت. این مقدار می‌بایست کمتر یا برابر ``datetime.MAXYEAR`` [`اسناد پایتون <https://docs.python.org/3/library/datetime.html#datetime.MAXYEAR>`__] و همچنین بیشتر یا برابر ``datetime.MINYEAR`` [`اسناد پایتون <https://docs.python.org/3/library/datetime.html#datetime.MINYEAR>`__] باشد (``MINYEAR <= year <= MAXYEAR``). 

* ``month``: از نوع ``int`` می‌باشد و مقداری برابر با ماه مورد نظر خواهد داشت که می‌بایست عددی از بین اعداد ``1`` تا ``12`` باشد.

* ``day``: از نوع ``int`` می‌باشد و مقداری برابر با روزی مشخص در ماه ذکر شده خواهد داشت.



  ::

      >>> datetime.MINYEAR
      1
      >>> datetime.MAXYEAR
      9999

      >>> datetime.MINYEAR <= date.year <= datetime.MAXYEAR
      True
      >>> 1 <= date.month <= 12
      True
      >>> 1 <= date.day <= 31
      True

باید توجه داشت که مقدار این سه attribute پس از نمونه‌سازی قابل تغییر نخواهد بود و به اصطلاح read-only هستند::

    >>> date.year = 2022
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
    AttributeError: attribute 'year' of 'datetime.date' objects is not writable

**۲- با استفاده از کلاس متد** ``fromisoformat`` [`اسناد پایتون <https://docs.python.org/3/library/datetime.html#datetime.date.fromisoformat>`__] از کلاس ``datetime.date`` (البته از نسخه 3.7 پایتون به بعد)، در تعریف این متد یک پارامتر از نوع ``str`` قرار داده شده است که یک تاریخ را براساس قالب استاندارد ISO 8601 [`ویکی‌پدیا <https://en.wikipedia.org/wiki/ISO_8601>`__] دریافت و یک شی معادل از کلاس ``datetime.date`` را برمی‌گرداند. این قالب برابر ``YYYY-MM-DD`` می‌باشد که از سمت چپ معرف چهار رقم سال، یک خط تیره، دو رقم ماه، یک خط تیره و دو رقم روز ماه می‌باشد؛ همانند: ``07-04-2020``::

    >>> import datetime

    >>> d = datetime.date.fromisoformat('2021-04-07')

یا::

    >>> from datetime import date

    >>> d = date.fromisoformat('2021-04-07')

که::

    >>> d
    datetime.date(2021, 4, 7)

    >>> type(d)
    <class 'datetime.date'>

::

    >>> d.year
    2021
    >>> d.month
    4
    >>> d.day
    7

**۳- با استفاده از کلاس متد** ``fromordinal`` [`اسناد پایتون <https://docs.python.org/3/library/datetime.html#datetime.date.fromordinal>`__] از کلاس ``datetime.date``، در تعریف این متد یک پارامتر از نوع ``int`` قرار داده شده است که معادل یک proleptic Gregorian ordinal [`ویکی‌پدیا <https://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar>`__] را دریافت و یک شی معادل از کلاس ``datetime.date`` را برمی‌گرداند. این مقدار برابر شمارش تعداد روزها از تاریخ یکم ژانویه سال یک میلادی تا تاریخ مورد نظر می‌باشد::


    >>> import datetime

    >>> d = datetime.date.fromordinal(737887)

یا::

    >>> from datetime import date

    >>> d = date.fromordinal(737887)

که::

    >>> d
    datetime.date(2021, 4, 7)

    >>> type(d)
    <class 'datetime.date'>

::

    >>> d.year
    2021
    >>> d.month
    4
    >>> d.day
    7





کلاس ``datetime.time``
~~~~~~~~~~~~~~~~~~~~~~~~~~~


کلاس ``datetime.datetime``
~~~~~~~~~~~~~~~~~~~~~~~~~~~









|

----

:emoji-size:`😊` امیدوارم مفید بوده باشه

`لطفا دیدگاه و سوال‌های مرتبط با این درس خود را در کدرز مطرح نمایید. <https://www.coderz.ir/python-tutorial-datetime>`_



